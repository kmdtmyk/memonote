<div class='ui container'>

  <div id='app' v-cloak>

    <div class='ui form'>
      <div class='inline fields'>
        <div class='field'>
          <label>name</label>
          <input type='text' v-model='newLabel.name'>
        </div>
        <div class='field'>
          <label>font color</label>
          <input type='text' v-model='newLabel.style.color'>
        </div>
        <div class='field'>
          <label>background color</label>
          <input type='text' v-model='newLabel.style.backgroundColor'>
        </div>
        <button class='ui button primary' v-on:click='add'>Add label</button>
      </div>
    </div>

    <table class='ui table striped'>
      <thead>
        <tr>
          <th colspan='2'>
            labels
          </th>
        </tr>
      </thead>
      <tbody>
        <tr v-for='label in labels'>
          <td>
            <span class='ui tag label' :style='label.style'>{{label.name}}</span>
          </td>
          <td class='right aligned'>
            <button class='ui button primary'>edit</button>
            <button class='ui button negative' v-on:click='delete(label)'>delete</button>
          </td>
        </tr>
      </tbody>
    </table>

  </div>

</div>

<script src='https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.26/vue.min.js'></script>
<script>
(function(){

window.addEventListener('DOMContentLoaded', function(){
  main()
})

function main(){

  var vue = new Vue({
    el: '#app',
    data: {
      labels: [],
      newLabel: {},
    },
    methods: {
      add(){
        io.socket.post('/api/label', this.newLabel, (res) => {
          console.log('post', res)
          this.newLabel = {}
          fetch()
        })
      },
      delete(label){
        io.socket.delete(`/api/label/${label.id}`, (res) => {
          console.log('delete', res)
          fetch()
        })
      }
    },
  })

  io.socket.on('label', (res) => {
    console.log('on', res)
    fetch()
  })

  fetch()

  function fetch(){
    io.socket.get('/api/label', function(labels){
      console.log('get', labels)
      vue.labels = labels
    })
  }

}

})()
</script>
